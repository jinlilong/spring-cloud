<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.loan.core.dao.RiskRuleDao">


    <resultMap type="org.loan.core.domain.RiskRuleEntity" id="riskRuleMap">
        <result property="id" column="id"/>
        <result property="ruleName" column="rule_name"/>
        <result property="priority" column="priority"/>
        <result property="groupType" column="group_type"/>
        <result property="groupName" column="group_name"/>
        <result property="executeContent" column="execute_content"/>
        <result property="delFlag" column="del_flag"/>
        <result property="opTime" column="op_time"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, 
		rule_name, 
		priority, 
		group_type, 
		group_name, 
		execute_content, 
		del_flag, 
		op_time
    </sql>

    <select id="queryObject" resultType="org.loan.core.domain.RiskRuleEntity" resultMap="riskRuleMap">
        select
        <include refid="Base_Column_List"/>
        from sys_risk_rule
        where id = #{value}
    </select>

    <select id="queryRuleList" resultType="org.loan.core.domain.RiskRuleEntity" resultMap="riskRuleMap">
        select
        <include refid="Base_Column_List"/>
        from sys_risk_rule
        where group_type = #{value} and del_flag = 0
        order by priority
    </select>

    <select id="queryList" resultType="org.loan.core.domain.RiskRuleEntity" resultMap="riskRuleMap">
        select
        <include refid="Base_Column_List"/>
        from sys_risk_rule
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryListByBean" resultType="org.loan.core.domain.RiskRuleEntity" resultMap="riskRuleMap">
        select
        <include refid="Base_Column_List"/>
        from sys_risk_rule
        WHERE 1=1
    </select>

    <select id="queryTotal" resultType="int">
		select count(*) from sys_risk_rule
	</select>

    <insert id="save" parameterType="org.loan.core.domain.RiskRuleEntity" useGeneratedKeys="true"
            keyProperty="id">
		insert into sys_risk_rule
		(
			`rule_name`, 
			`priority`, 
			`group_type`, 
			`group_name`, 
			`execute_content`, 
			`del_flag`, 
			`op_time`
		)
		values
		(
			#{ruleName}, 
			#{priority}, 
			#{groupType}, 
			#{groupName}, 
			#{executeContent}, 
			#{delFlag}, 
			#{opTime}
		)
	</insert>

    <update id="update" parameterType="org.loan.core.domain.RiskRuleEntity">
        update sys_risk_rule
        <set>
            <if test="ruleName != null">`rule_name` = #{ruleName},</if>
            <if test="priority != null">`priority` = #{priority},</if>
            <if test="groupType != null">`group_type` = #{groupType},</if>
            <if test="groupName != null">`group_name` = #{groupName},</if>
            <if test="executeContent != null">`execute_content` = #{executeContent},</if>
            <if test="delFlag != null">`del_flag` = #{delFlag},</if>
            <if test="opTime != null">`op_time` = #{opTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from sys_risk_rule where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from sys_risk_rule where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>