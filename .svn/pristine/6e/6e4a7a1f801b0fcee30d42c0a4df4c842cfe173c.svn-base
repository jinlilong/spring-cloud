<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.loan.core.dao.SpCreditEffectDao">


    <resultMap type="org.loan.core.domain.SpCreditEffectEntity" id="spCreditEffectMap">
        <result property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="createName" column="create_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateName" column="update_name"/>
        <result property="createId" column="create_id"/>
        <result property="creditId" column="credit_id"/>
        <result property="status" column="status"/>
        <result property="title" column="title"/>
        <result property="editState" column="edit_state"/>
    </resultMap>

    <sql id="Base_Column_List" >
		id, 
		create_time, 
		create_name, 
		update_time, 
		update_name, 
		create_id, 
		credit_id, 
		status, 
		title, 
		edit_state
    </sql>

	<select id="queryObject" resultType="org.loan.core.domain.SpCreditEffectEntity" resultMap="spCreditEffectMap">
		select
		<include refid="Base_Column_List" />
		from sp_credit_effect
		where id = #{value}
	</select>

	<select id="queryList" resultType="org.loan.core.domain.SpCreditEffectEntity" resultMap="spCreditEffectMap">
		select
		<include refid="Base_Column_List" />
		from sp_credit_effect
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="org.loan.core.domain.SpCreditEffectEntity" resultMap="spCreditEffectMap">
        select
        <include refid="Base_Column_List" />
        from sp_credit_effect
        WHERE 1=1
    </select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sp_credit_effect
	</select>
	 
	<insert id="save" parameterType="org.loan.core.domain.SpCreditEffectEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sp_credit_effect
		(
			`create_time`, 
			`create_name`, 
			`update_time`, 
			`update_name`, 
			`create_id`, 
			`credit_id`, 
			`status`, 
			`title`, 
			`edit_state`
		)
		values
		(
			#{createTime}, 
			#{createName}, 
			#{updateTime}, 
			#{updateName}, 
			#{createId}, 
			#{creditId}, 
			#{status}, 
			#{title}, 
			#{editState}
		)
	</insert>
	 
	<update id="update" parameterType="org.loan.core.domain.SpCreditEffectEntity">
		update sp_credit_effect 
		<set>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="createName != null">`create_name` = #{createName}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="updateName != null">`update_name` = #{updateName}, </if>
			<if test="createId != null">`create_id` = #{createId}, </if>
			<if test="creditId != null">`credit_id` = #{creditId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="title != null">`title` = #{title}, </if>
			<if test="editState != null">`edit_state` = #{editState}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sp_credit_effect where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sp_credit_effect where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>