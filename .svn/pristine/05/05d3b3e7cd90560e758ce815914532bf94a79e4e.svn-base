<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.loan.core.dao.ClUserAuthRuleDao">


    <resultMap type="org.loan.core.domain.ClUserAuthRuleEntity" id="clUserAuthRuleMap">
        <result property="id" column="id"/>
        <result property="mortgageType" column="mortgage_type"/>
        <result property="name" column="name"/>
        <result property="authTypeId" column="auth_type_id"/>
        <result property="notNeedId" column="not_need_id"/>
    </resultMap>

    <sql id="Base_Column_List" >
		id, 
		mortgage_type, 
		name, 
		auth_type_id, 
		not_need_id
    </sql>

	<select id="queryObject" resultType="org.loan.core.domain.ClUserAuthRuleEntity" resultMap="clUserAuthRuleMap">
		select
		<include refid="Base_Column_List" />
		from cl_user_auth_rule
		where id = #{value}
	</select>

	<select id="queryList" resultType="org.loan.core.domain.ClUserAuthRuleEntity" resultMap="clUserAuthRuleMap">
		select
		<include refid="Base_Column_List" />
		from cl_user_auth_rule
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="org.loan.core.domain.ClUserAuthRuleEntity" resultMap="clUserAuthRuleMap">
        select
        <include refid="Base_Column_List" />
        from cl_user_auth_rule
        WHERE 1=1
    </select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from cl_user_auth_rule
	</select>
	 
	<insert id="save" parameterType="org.loan.core.domain.ClUserAuthRuleEntity" useGeneratedKeys="true" keyProperty="id">
		insert into cl_user_auth_rule
		(
			`mortgage_type`, 
			`name`, 
			`auth_type_id`, 
			`not_need_id`
		)
		values
		(
			#{mortgageType}, 
			#{name}, 
			#{authTypeId}, 
			#{notNeedId}
		)
	</insert>
	 
	<update id="update" parameterType="org.loan.core.domain.ClUserAuthRuleEntity">
		update cl_user_auth_rule 
		<set>
			<if test="mortgageType != null">`mortgage_type` = #{mortgageType}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="authTypeId != null">`auth_type_id` = #{authTypeId}, </if>
			<if test="notNeedId != null">`not_need_id` = #{notNeedId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from cl_user_auth_rule where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from cl_user_auth_rule where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="queryByMortgageType" resultType="org.loan.core.domain.ClUserAuthRuleEntity" resultMap="clUserAuthRuleMap">
		select
		<include refid="Base_Column_List" />
		from cl_user_auth_rule
		where mortgage_type = #{value}
	</select>
</mapper>